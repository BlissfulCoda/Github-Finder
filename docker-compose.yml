version: "3.8"

services:
  # nginx:
  #   image: nginx:stable-alpine
  #   restart: always
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./nginx
  #   ports:
  #     - "4000:80"
  #   networks:
  #     - mern-app
  #   depends_on:
  #     - api
  #     - client

  client:
    image: frontend
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
      target: development
    stdin_open: true
    volumes:
      - ./client/:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    environment:
      - PORT=3000
    ports:
      - "3000:3000"
    networks:
      - mern-app
    depends_on:
      - api
    command: npm run dev

  api:
    image: backend
    container_name: api
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    restart: always
    volumes:
      - ./server/:/usr/src/app
      - /usr/src/app/node_modules
      - ./server/nodemon.json:/usr/src/app/nodemon.json
    env_file: ./server/.env
    networks:
      - mern-app
    environment:
      - PORT=8000
    depends_on:
      - mongo
      - redis
    ports:
      - "8000:8000"
    command: npm run dev

  mongo:
    image: mongo
    container_name: mongo-db
    restart: always
    ports:
      - "27017:27017"
    networks:
      - mern-app
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongo-db:/data/db

  redis:
    container_name: redis
    restart: always
    image: "redis"
    command: redis-server
    networks:
      - mern-app
    ports:
      - "6379:6379"
    expose:
      - 6379

networks:
  mern-app:
    driver: bridge
  host:
    name: host
    external: true

volumes:
  mongo-db:
  data:
